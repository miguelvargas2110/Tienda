/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventas.gui;

import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import ventas.bl.productosBL;
import ventas.dal.conexion;

/**
 *
 * @author migue
 */
public class ProductosGUI extends javax.swing.JFrame {

        DefaultTableModel modelo;

    
    public ProductosGUI() {
        initComponents();
        
        botones.add(rbEnvasados);
        botones.add(rbPerecederos);
        botones.add(rbRefrigerados);
        
        String[] titulos = {"Codigo", "Nombre", "Descripcion", "Valor Unitario", "Cantidad Existente", "Tipo Producto",
            "Fecha de Envasado / Vencimiento", "Peso / temperatura", "Pais / Codigo"};
        
        modelo = new DefaultTableModel(null, titulos);
        tblProductos.setModel(modelo);
        
        mostrarDatos();
        
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        txtValorUnitario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCantidadExistente = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        rbPerecederos = new javax.swing.JRadioButton();
        rbEnvasados = new javax.swing.JRadioButton();
        rbRefrigerados = new javax.swing.JRadioButton();
        jFecha = new javax.swing.JLabel();
        jPesoTemperatura = new javax.swing.JLabel();
        txtPaisCodigo = new javax.swing.JTextField();
        txtPesoTemperatura = new javax.swing.JTextField();
        txtFecha = new com.toedter.calendar.JDateChooser();
        jPaisCodigo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Producto"));
        jPanel1.setPreferredSize(new java.awt.Dimension(588, 304));

        jLabel1.setText("Codigo:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Descripcion:");

        jLabel4.setText("Valor Unitario");

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtDescripcion);

        jLabel5.setText("Cantidad Existente:");

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        rbPerecederos.setText("Producto Perecedero");
        rbPerecederos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPerecederosActionPerformed(evt);
            }
        });

        rbEnvasados.setText("Producto Envasados");
        rbEnvasados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbEnvasadosActionPerformed(evt);
            }
        });

        rbRefrigerados.setText("Producto Refrigerado");
        rbRefrigerados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRefrigeradosActionPerformed(evt);
            }
        });

        jFecha.setText("Fecha de Caducidad:");

        jPesoTemperatura.setText("Temperatura Adecuada:");

        txtPaisCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaisCodigoActionPerformed(evt);
            }
        });

        jPaisCodigo.setText("Codigo de Aprobacion:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbPerecederos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(rbEnvasados, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbRefrigerados, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                                .addComponent(txtCantidadExistente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(129, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPesoTemperatura, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPaisCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(112, 112, 112)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPesoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPaisCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(btnCancelar))
                    .addComponent(txtValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtCantidadExistente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbPerecederos)
                    .addComponent(rbRefrigerados)
                    .addComponent(rbEnvasados))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPesoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesoTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPaisCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPaisCodigo))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabla Productos"));

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 816, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        
        conexion objConexion = new conexion();

        if (espaciosVacios() == true) {
        } else {
            productosBL oProductos = recuperarDatosGUI();

            String strSentenciaInsert = String.format("INSERT INTO Productos (Codigo, Nombre, Descripcion, ValorUnitario, CantidadExistente, "
                    + "TipoProducto, FechaEnvasado_Vencimiento, Peso_temperatura, Pais_Codigo)"
                    + " VALUES ('%s', '%s', '%s', '%s','%s', '%s', '%s', '%s', '%s')", oProductos.getCodigo(), oProductos.getNombre(), oProductos.getDescripcion(), 
                    oProductos.getValorUnitario(), oProductos.getCantidadExistencia(), oProductos.getTipoProductos(), oProductos.getFechaEnvasado_caducidad(), 
                    oProductos.getPeso_temperatura(), oProductos.getPais_codigo());

            objConexion.ejecutarSentenciaSQL(strSentenciaInsert);

            this.mostrarDatos();

            this.limpiar();
        }
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        conexion objConexion = new conexion();

        if (espaciosVacios()) {
        } else {
            productosBL oProductos = recuperarDatosGUI();

            String strSentenciaInsert = String.format("UPDATE Productos SET Codigo = '%s', Nombre = '%s',"
                    + "Descripcion= '%s', ValorUnitario = '%s', CantidadExistente = '%s', TipoProducto = '%s', "
                    + "FechaEnvasado_Vencimiento = '%s', Peso_temperatura = '%s',  Pais_Codigo = '%s'"
                    + "WHERE Codigo = %s", oProductos.getCodigo(), oProductos.getNombre(), oProductos.getDescripcion(), oProductos.getValorUnitario(),
                    oProductos.getCantidadExistencia(), oProductos.getTipoProductos(), oProductos.getFechaEnvasado_caducidad(), 
                    oProductos.getPeso_temperatura(), oProductos.getPais_codigo(), oProductos.getCodigo());

            objConexion.ejecutarSentenciaSQL(strSentenciaInsert);

            limpiar();

            this.mostrarDatos();
        }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void rbEnvasadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbEnvasadosActionPerformed
        tipoProducto();
    }//GEN-LAST:event_rbEnvasadosActionPerformed

    private void rbRefrigeradosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRefrigeradosActionPerformed
        tipoProducto();
    }//GEN-LAST:event_rbRefrigeradosActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        
        if(evt.getClickCount() == 1){
            
            JTable receptor = (JTable)evt.getSource();
            
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            try {
      
            txtCodigo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 0).toString());
            txtNombre.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 1).toString());
            txtDescripcion.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 2).toString());
            txtValorUnitario.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 3).toString());
            txtCantidadExistente.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 4).toString());
            if ("Envasado".equals(receptor.getModel().getValueAt(receptor.getSelectedRow(), 5).toString())) {
                rbEnvasados.setSelected(true);
                tipoProducto();
                Date fecha = formatoFecha.parse(receptor.getModel().getValueAt(receptor.getSelectedRow(), 6).toString());
                txtFecha.setDate(fecha);
                txtPesoTemperatura.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 7).toString());
                txtPaisCodigo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 8).toString());
            } else if ("Perecedero".equals(receptor.getModel().getValueAt(receptor.getSelectedRow(), 5).toString())) {
                rbPerecederos.setSelected(true);
                tipoProducto();
                Date fecha = formatoFecha.parse(receptor.getModel().getValueAt(receptor.getSelectedRow(), 6).toString());
                txtFecha.setDate(fecha);
            } else {
                rbRefrigerados.setSelected(true);
                tipoProducto();
                txtPesoTemperatura.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 7).toString());
                txtPaisCodigo.setText(receptor.getModel().getValueAt(receptor.getSelectedRow(), 8).toString());
                txtFecha.setCalendar(null);
            }
            txtCodigo.setEnabled(false);
                
            } catch (ParseException ex) {
                Logger.getLogger(ClientesGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        
        btnAgregar.setEnabled(false);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        
    }//GEN-LAST:event_tblProductosMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
    
        limpiar();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        conexion objConexion = new conexion();

        productosBL oProductos = recuperarDatosGUI();

        String strSentenciaInsert = String.format("DELETE FROM Productos WHERE Codigo= %s",oProductos.getCodigo());        

        objConexion.ejecutarSentenciaSQL(strSentenciaInsert);

        limpiar();

        this.mostrarDatos();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtPaisCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaisCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaisCodigoActionPerformed

    private void rbPerecederosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPerecederosActionPerformed
        tipoProducto();
    }//GEN-LAST:event_rbPerecederosActionPerformed
    
    public void mostrarDatos(){
        
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

        conexion objConexion = new conexion();

        try {
            ResultSet resultado = objConexion.consultarRegistros("Select * FROM Productos");

            while (resultado.next()) {
                System.out.println(resultado.getString("Codigo"));
                System.out.println(resultado.getString("Nombre"));
                System.out.println(resultado.getString("Descripcion"));
                System.out.println(resultado.getString("ValorUnitario"));
                System.out.println(resultado.getString("CantidadExistente"));
                System.out.println(resultado.getString("TipoProducto"));
                System.out.println(resultado.getString("FechaEnvasado_Vencimiento"));
                System.out.println(resultado.getString("Peso_Temperatura"));
                System.out.println(resultado.getString("Pais_Codigo"));

                if ("Envasado".equals(resultado.getString("TipoProducto"))) {
                    rbEnvasados.setSelected(true);
                    tipoProducto();
                } else if ("Refrigerado".equals(resultado.getString("TipoProducto"))) {
                    rbRefrigerados.setSelected(true);
                    tipoProducto();
                } else {
                    rbPerecederos.setSelected(true);
                    tipoProducto();
                }

                Object[] oProducto = {resultado.getString("Codigo"), resultado.getString("Nombre"), resultado.getString("Descripcion"),
                    resultado.getString("ValorUnitario"), resultado.getString("CantidadExistente"), resultado.getString("TipoProducto"),
                    resultado.getString("FechaEnvasado_Vencimiento"), resultado.getString("Peso_temperatura"), resultado.getString("Pais_Codigo")};

                modelo.addRow(oProducto);
            }
        } catch (Exception e) {
            System.out.println(e);
        }

    }
    
    public productosBL recuperarDatosGUI(){
        productosBL oProductos = new productosBL();

        oProductos.setCodigo(txtCodigo.getText());
        oProductos.setNombre(txtNombre.getText());
        oProductos.setDescripcion(txtDescripcion.getText());
        oProductos.setValorUnitario(txtValorUnitario.getText());
        oProductos.setCantidadExistencia(txtCantidadExistente.getText());
        if (rbEnvasados.isSelected()) {
            oProductos.setTipoProductos("Envasado");
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            String fecha = formatoFecha.format(txtFecha.getDate());
            oProductos.setFechaEnvasado_caducidad(fecha);
        } else if (rbPerecederos.isSelected()) {
            oProductos.setTipoProductos("Perecedero");
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            String fecha = formatoFecha.format(txtFecha.getDate());
            oProductos.setFechaEnvasado_caducidad(fecha);
        } else {
            oProductos.setTipoProductos("Refrigerado");
            oProductos.setFechaEnvasado_caducidad("");
        }
        oProductos.setPeso_temperatura(txtPesoTemperatura.getText());
        oProductos.setPais_codigo(txtPaisCodigo.getText());

        return oProductos;
    }
    
    
    public void limpiar(){
        
        txtCodigo.setText("");
        txtNombre.setText("");
        txtDescripcion.setText("");
        txtValorUnitario.setText("");
        txtCantidadExistente.setText("");
        txtFecha.setCalendar(null);
        txtPesoTemperatura.setText("");
        txtPaisCodigo.setText("");
        txtCodigo.setEnabled(true);
        
        
        btnAgregar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);

        jFecha.setVisible(false);
        txtFecha.setVisible(false);
        jPesoTemperatura.setVisible(false);
        txtPesoTemperatura.setVisible(false);
        jPaisCodigo.setVisible(false);
        txtPaisCodigo.setVisible(false);

        botones.clearSelection();
    }
    
    public boolean espaciosVacios(){
        if (txtCodigo.getText().matches("[+-]?\\d*(\\.\\d+)?") == false){
            JOptionPane.showMessageDialog(this, "La identificacion solo admite numeros");
            return true;
        }else if (txtCodigo.getText().isEmpty() || txtNombre.getText().isEmpty() || txtDescripcion.getText().isEmpty()
                || txtValorUnitario.getText().isEmpty() || txtCantidadExistente.getText().isEmpty() || jFecha.getText().isEmpty() && rbPerecederos.isSelected()
                || (jFecha.getText().isEmpty() && jPesoTemperatura.getText().isEmpty() && jPaisCodigo.getText().isEmpty() && rbEnvasados.isSelected())
                || (jPesoTemperatura.getText().isEmpty() && jPaisCodigo.getText().isEmpty() && rbRefrigerados.isSelected())
                || (rbPerecederos.isSelected() == false && rbEnvasados.isSelected() == false && rbRefrigerados.isSelected() == false)) {
            JOptionPane.showMessageDialog(this, "Por Favor rellenar todos los campos");
            return true;
        } else {
            return false;
        }
    }

    public void tipoProducto() {
        if (rbPerecederos.isSelected()) {
            jFecha.setText("Fecha de vencimiento:");
            jFecha.setVisible(true);
            txtFecha.setVisible(true);
            jPesoTemperatura.setVisible(false);
            txtPesoTemperatura.setVisible(false);
            jPaisCodigo.setVisible(false);
            txtPaisCodigo.setVisible(false);
        } else if (rbEnvasados.isSelected()) {
            jFecha.setText("Fecha de Envasado:");
            jFecha.setVisible(true);
            txtFecha.setVisible(true);
            jPesoTemperatura.setText("Peso del Envase:");
            jPesoTemperatura.setVisible(true);
            txtPesoTemperatura.setVisible(true);
            jPaisCodigo.setText("Pais Origen:");
            jPaisCodigo.setVisible(true);
            txtPaisCodigo.setVisible(true);
        } else if (rbRefrigerados.isSelected()) {
            jFecha.setVisible(false);
            txtFecha.setVisible(false);
            jPesoTemperatura.setText("Temperatura Adecuada:");
            jPesoTemperatura.setVisible(true);
            txtPesoTemperatura.setVisible(true);
            jPaisCodigo.setText("Codigo de Aprobacion:");
            jPaisCodigo.setVisible(true);
            txtPaisCodigo.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductosGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup botones;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JLabel jFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jPaisCodigo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jPesoTemperatura;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbEnvasados;
    private javax.swing.JRadioButton rbPerecederos;
    private javax.swing.JRadioButton rbRefrigerados;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCantidadExistente;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtDescripcion;
    private com.toedter.calendar.JDateChooser txtFecha;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPaisCodigo;
    private javax.swing.JTextField txtPesoTemperatura;
    private javax.swing.JTextField txtValorUnitario;
    // End of variables declaration//GEN-END:variables
}
